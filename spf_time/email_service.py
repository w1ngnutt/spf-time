import sendgrid
from sendgrid.helpers.mail import Mail, Attachment, FileContent, FileName, FileType, Disposition
import base64
from typing import List
from .config import Config

class EmailService:
    def __init__(self, config: Config):
        self.config = config
        
    def send_report_email(self, csv_data: str, date_range: str) -> bool:
        try:
            sg = sendgrid.SendGridAPIClient(api_key=self.config.email.sendgrid_api_key)
            
            subject = self.config.email.subject_template.format(date_range=date_range)
            
            html_content = f"""
            <html>
            <body>
                <h2>Time Tracking Report</h2>
                <p><strong>Report Period:</strong> {date_range}</p>
                <p>Please find the attached CSV file containing detailed time tracking records for all employees.</p>
                
                <h3>Report Summary:</h3>
                <ul>
                    <li>Generated on: {date_range}</li>
                    <li>Format: CSV (Comma Separated Values)</li>
                    <li>Contains: Employee names, dates, clock in/out times, and duration</li>
                </ul>
                
                <p>If you have any questions about this report, please contact the system administrator.</p>
                
                <hr>
                <p><em>This report was automatically generated by the Time Tracking System.</em></p>
            </body>
            </html>
            """
            
            plain_content = f"""
            Time Tracking Report
            
            Report Period: {date_range}
            
            Please find the attached CSV file containing detailed time tracking records for all employees.
            
            Report Summary:
            - Generated on: {date_range}
            - Format: CSV (Comma Separated Values)
            - Contains: Employee names, dates, clock in/out times, and duration
            
            If you have any questions about this report, please contact the system administrator.
            
            This report was automatically generated by the Time Tracking System.
            """
            
            # Create the email
            message = Mail(
                from_email=(self.config.email.from_email, self.config.email.from_name),
                to_emails=self.config.email.report_recipients,
                subject=subject,
                html_content=html_content,
                plain_text_content=plain_content
            )
            
            # Add CSV attachment
            csv_attachment = Attachment(
                FileContent(base64.b64encode(csv_data.encode()).decode()),
                FileName(f'time_report_{date_range.replace("/", "-").replace(" - ", "_to_")}.csv'),
                FileType('text/csv'),
                Disposition('attachment')
            )
            message.attachment = csv_attachment
            
            # Send the email
            response = sg.send(message)
            
            return response.status_code == 202
            
        except Exception as e:
            print(f"Error sending email: {str(e)}")
            return False
    
    def test_email_configuration(self) -> bool:
        """Test if email configuration is valid"""
        try:
            if not self.config.email.sendgrid_api_key or self.config.email.sendgrid_api_key == "your_sendgrid_api_key_here":
                return False
            
            if not self.config.email.report_recipients:
                return False
            
            # Test API key validity (this would require a test email)
            sg = sendgrid.SendGridAPIClient(api_key=self.config.email.sendgrid_api_key)
            
            return True
            
        except Exception:
            return False